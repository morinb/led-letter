package com.bnpparibas.grp.ledletter.fonts;

import com.bnpparibas.grp.ledletter.HexUtils;

import java.util.BitSet;

/**
 * Adaptation of jfxtras MatrixPanel
 */
public enum FontFormat7x9 implements LetterDescription {

   FF7x9_32("00 00 00 00 00 00 00 00 00 00 00 00 00 00", 32) /* SPACE */,
   FF7x9_33("00 00 00 00 FE 80 FE 80 00 00 00 00 00 00", 33) /* ! */,
   FF7x9_34("A0 00 E0 00 C0 00 00 00 A0 00 E0 00 C0 00", 34) /* " */,
   FF7x9_35("36 00 FF 80 FF 80 36 00 FF 80 FF 80 34 00", 35) /* # */,
   FF7x9_36("31 00 49 00 FF 80 FF 80 49 00 4F 00 46 00", 36) /* $ */,
   FF7x9_37("C1 80 C3 00 06 00 0C 00 18 00 31 80 61 80", 37) /* % */,
   FF7x9_38("67 00 EF 80 98 80 F8 80 65 80 02 00 05 00", 38) /* & */,
   FF7x9_40("00 00 7F 00 FF 80 80 80 00 00 00 00 00 00", 40) /* ( */,
   FF7x9_41("00 00 00 00 80 80 FF 80 7F 00 00 00 00 00", 41) /* ) */,
   FF7x9_42("2A 00 1C 00 3E 00 1C 00 2A 00 00 00 00 00", 42) /* * */,
   FF7x9_43("08 00 08 00 3E 00 3E 00 08 00 08 00 00 00", 43) /* + */,
   FF7x9_44("00 00 05 00 07 00 06 00 00 00 00 00 00 00", 44) /* , */,
   FF7x9_45("08 00 08 00 08 00 08 00 08 00 08 00 08 00", 45) /* - */,
   FF7x9_46("00 00 03 00 03 00 03 00 00 00 00 00 00 00", 46) /* . */,
   FF7x9_47("03 00 06 00 0C 00 18 00 30 00 60 00 C0 00", 47) /*  / */,
   FF7x9_48("7F 00 FF 80 84 80 88 80 90 80 FF 80 7F 00", 48) /* 0 */,
   FF7x9_49("00 00 40 80 FF 80 FF 80 00 80 00 00 00 00", 49) /* 1 */,
   FF7x9_50("41 80 C3 80 86 80 8C 80 98 80 F0 80 60 80", 50) /* 2 */,
   FF7x9_51("41 00 C1 80 80 80 88 80 88 80 FF 80 77 00", 51) /* 3 */,
   FF7x9_52("0C 00 1C 00 34 00 64 80 FF 80 FF 80 04 80", 52) /* 4 */,
   FF7x9_53("F1 00 F1 80 90 80 90 80 90 80 9F 80 8F 00", 53) /* 5 */,
   FF7x9_54("7F 00 FF 80 90 80 90 80 90 80 1F 80 0F 00", 54) /* 6 */,
   FF7x9_55("80 00 80 00 8F 80 9F 80 B0 00 E0 00 C0 00", 55) /* 7 */,
   FF7x9_56("77 00 FF 80 98 80 98 80 98 80 FF 80 F7 00", 56) /* 8 */,
   FF7x9_57("70 00 F8 80 88 80 88 80 88 80 FF 80 7F 00", 57) /* 9 */,
   FF7x9_58("00 00 33 00 33 00 33 00 00 00 00 00 00 00", 58) /* : */,
   FF7x9_59("00 00 35 00 37 00 36 00 00 00 00 00 00 00", 59) /* ; */,
   FF7x9_60("08 00 1C 00 36 00 63 00 41 00 00 00 00 00", 60) /* < */,
   FF7x9_61("00 00 14 00 14 00 14 00 14 00 14 00 00 00", 61) /*  = */,
   FF7x9_62("00 00 00 00 41 00 63 00 36 00 1C 00 08 00", 62) /* > */,
   FF7x9_63("40 00 C0 00 86 80 8E 80 88 00 F8 00 70 00", 63) /* ? */,
   FF7x9_64("7F 00 FF 80 80 80 9C 80 94 80 FC 80 7C 00", 64) /* @ */,
   FF7x9_65("7F 80 FF 80 84 00 84 00 84 00 FF 80 7F 80", 65) /* A */,
   FF7x9_66("FF 80 FF 80 88 80 88 80 88 80 FF 80 77 00", 66) /* B */,
   FF7x9_67("7F 00 FF 80 80 80 80 80 80 80 C1 80 41 00", 67) /* C */,
   FF7x9_68("FF 80 FF 80 80 80 80 80 80 80 FF 80 7F 00", 68) /* D */,
   FF7x9_69("FF 80 FF 80 88 80 88 80 88 80 80 80 80 80", 69) /* E */,
   FF7x9_70("FF 80 FF 80 88 00 88 00 88 00 80 00 80 00", 70) /* F */,
   FF7x9_71("7F 00 FF 80 80 80 88 80 88 80 CF 80 4F 00", 71) /* G */,
   FF7x9_72("FF 80 FF 80 08 00 08 00 08 00 FF 80 FF 80", 72) /* H */,
   FF7x9_73("00 00 80 80 FF 80 FF 80 80 80 00 00 00 00", 73) /* I */,
   FF7x9_74("01 00 01 80 00 80 00 80 00 80 FF 80 FF 00", 74) /* J */,
   FF7x9_75("FF 80 FF 80 1C 00 36 00 63 00 C1 80 80 80", 75) /* K */,
   FF7x9_76("FF 80 FF 80 00 80 00 80 00 80 00 80 00 80", 76) /* L */,
   FF7x9_77("FF 80 FF 80 60 00 30 00 60 00 FF 80 FF 80", 77) /* M */,
   FF7x9_78("FF 80 FF 80 60 00 30 00 18 00 FF 80 FF 80", 78) /* N */,
   FF7x9_79("7F 00 FF 80 80 80 80 80 80 80 FF 80 7F 00", 79) /* O */,
   FF7x9_80("7F 80 FF 80 88 00 88 00 88 00 F8 00 70 00", 80) /* P */,
   FF7x9_81("7F 00 FF 80 80 80 86 80 83 00 FF 80 7E 80", 81) /* Q */,
   FF7x9_82("7F 80 FF 80 8C 00 8E 00 8B 00 F9 80 70 80", 82) /* R */,
   FF7x9_83("71 00 F9 80 88 80 88 80 88 80 CF 80 47 00", 83) /* S */,
   FF7x9_84("80 00 80 00 FF 80 FF 80 80 00 80 00 00 00", 84) /* T */,
   FF7x9_85("FF 00 FF 80 00 80 00 80 00 80 FF 80 FF 00", 85) /* U */,
   FF7x9_86("E0 00 F8 00 1E 00 03 80 1E 00 F8 00 E0 00", 86) /* V */,
   FF7x9_87("FF 00 FF 80 00 80 07 00 00 80 FF 80 FF 00", 87) /* W */,
   FF7x9_88("E3 80 E3 80 36 00 08 00 36 00 E3 80 E3 80", 88) /* X */,
   FF7x9_89("C0 00 E0 00 38 00 0F 80 38 00 E0 00 C0 00", 89) /* Y */,
   FF7x9_90("83 80 86 80 8C 80 98 80 B0 80 E0 80 C0 80", 90) /* Z */,
   FF7x9_91("00 00 FF 80 80 80 80 80 00 00 00 00 00 00", 91) /* [ */,
   FF7x9_92("C0 00 60 00 30 00 18 00 0C 00 06 00 03 00", 92) /* \ */,
   FF7x9_93("00 00 00 00 80 80 80 80 FF 80 00 00 00 00", 93) /* ] */,
   FF7x9_95("00 00 00 80 00 80 00 80 00 80 00 80 00 00", 95) /* _ */,
   FF7x9_97("03 00 27 80 24 80 24 80 24 80 3F 80 1F 80", 97) /* a */,
   FF7x9_98("FF 80 FF 80 10 80 20 80 20 80 3F 80 1F 80", 98) /* b */,
   FF7x9_99("1F 00 3F 80 20 80 20 80 20 80 20 80 20 80", 99) /* c */,
   FF7x9_100("1F 00 3F 80 20 80 20 80 10 80 FF 80 FF 80", 100) /* d */,
   FF7x9_101("1F 00 3F 80 24 80 24 80 24 80 3C 80 1C 00", 101) /* e */,
   FF7x9_102("04 00 7F 80 FF 80 84 00 C0 00 40 00 00 00", 102) /* f */,
   FF7x9_103("18 00 3C 80 24 80 24 80 24 80 3F 80 1F 80", 103) /* g */,
   FF7x9_104("FF 80 FF 80 10 00 20 00 20 00 3F 80 1F 80", 104) /* h */,
   FF7x9_105("00 00 20 80 BF 80 BF 80 00 80 00 00 00 00", 105) /* i */,
   FF7x9_106("01 00 01 80 00 80 00 80 20 80 BF 80 BF 00", 106) /* j */,
   FF7x9_107("FF 80 FF 80 04 00 0E 00 1B 00 31 80 20 80", 107) /* k */,
   FF7x9_108("00 00 80 80 FF 80 FF 80 00 80 00 00 00 00", 108) /* l */,
   FF7x9_109("3F 80 3F 80 20 00 18 00 20 00 3F 80 1F 80", 109) /* m */,
   FF7x9_110("3F 80 3F 80 10 00 20 00 20 00 3F 80 1F 80", 110) /* n */,
   FF7x9_111("1F 00 3F 80 20 80 20 80 20 80 3F 80 1F 00", 111) /* o */,
   FF7x9_112("3F 80 3F 80 14 00 24 00 24 00 3C 00 18 00", 112) /* p */,
   FF7x9_113("18 00 3C 00 24 00 24 00 14 00 3F 80 3F 80", 113) /* q */,
   FF7x9_114("3F 80 3F 80 10 00 20 00 20 00 30 00 10 00", 114) /* r */,
   FF7x9_115("19 00 3C 80 24 80 24 80 24 80 27 80 13 00", 115) /* s */,
   FF7x9_116("10 00 FF 00 FF 80 10 80 00 80 01 00 01 00", 116) /* t */,
   FF7x9_117("3F 80 3F 80 00 80 00 80 01 00 3F 80 3F 80", 117) /* u */,
   FF7x9_118("30 00 3C 00 07 00 00 80 07 00 3C 00 30 00", 118) /* v */,
   FF7x9_119("3F 00 3F 80 00 80 03 00 00 80 3F 80 3F 00", 119) /* w */,
   FF7x9_120("31 80 3B 80 0A 00 04 00 0A 00 3B 80 31 80", 120) /* x */,
   FF7x9_121("38 00 3C 80 04 80 04 80 06 80 3F 80 3F 00", 121) /* y */,
   FF7x9_122("21 80 23 80 26 80 2C 80 38 80 30 80 20 80", 122) /* z */,
   FF7x9_123("08 00 7F 00 F7 80 80 80 00 00 00 00 00 00", 123) /* { */,
   FF7x9_125("00 00 00 00 80 80 F7 80 7F 00 08 00 00 00", 125) /* } */,
   FF7x9_161("00 00 00 00 BF 80 BF 80 00 00 00 00 00 00", 161) /* &iexcl; */,
   FF7x9_186("20 00 50 00 50 00 20 00 00 00 00 00 00 00", 186) /* &ordm; */,
   FF7x9_191("07 00 0F 80 B8 80 B0 80 00 80 01 80 01 00", 191) /* &iquest; */,
   FF7x9_209("3F 80 BF 80 98 00 8C 00 86 00 BF 80 3F 80", 209) /* &Ntilde; */,
   FF7x9_241("3F 80 BF 80 90 00 A0 00 A0 00 BF 80 1F 80", 241) /* &ntilde; */;


   private final String hexLetter;
   private final int intLetter;

   FontFormat7x9(String hexLetter, int intLetter) {
      this.hexLetter = hexLetter;
      this.intLetter = intLetter;
   }

   @Override
   public String getHexLetter() {
      return hexLetter;
   }

   @Override
   public int getIntLetter() {
      return intLetter;
   }

   @Override
   public int bytes() {
      return 2;
   }

   @Override
   public int width() {
      return 7;
   }

   @Override
   public int height() {
      return 9;
   }

   private boolean[][] values = null;

   public void invalidate() {
      values = null;
   }

   public void initialize() {
      values = getValues();
   }

   public boolean[][] getValues() {
      if (values != null) {
         return values;
      }

      boolean[][] v = new boolean[height()][width()];
      for (int j = 0; j < bytes() * width(); j += bytes()) {
         for (int b = 0; b < bytes(); b++) {
            BitSet bs = BitSet.valueOf(HexUtils.toBytes(getHexLetter().split(" ")[j + b]));
            for (int k = 8 * b; k < Math.min(8 * (b + 1), height()); k++) {
               final int colIndex = (j / bytes());
               v[k][colIndex] = bs.get(7 - k + 8 * b);
            }
         }
      }
      return v;
   }

}
